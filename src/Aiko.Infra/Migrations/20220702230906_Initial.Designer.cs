// <auto-generated />
using System;
using Aiko.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aiko.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220702230906_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Aiko.Domain.Models.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("equi_uuid_equipment");

                    b.Property<Guid>("EquipmentModelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("equi_uuid_equipment_model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("equi_tx_name");

                    b.HasKey("Id")
                        .HasName("pk_equi_equipment");

                    b.HasIndex("EquipmentModelId");

                    b.ToTable("equi_equipment");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqmo_uuid_equipment_model");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("eqmo_tx_name");

                    b.HasKey("Id")
                        .HasName("pk_eqmo_equipment_model");

                    b.ToTable("eqmo_equipment_model");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentModelStateHourlyEarning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("emsh_uuid_equipment_model_state_hourly_earning");

                    b.Property<Guid>("EquipmentModelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("emsh_uuid_equipment_model");

                    b.Property<Guid>("EquipmentStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("emsh_uuid_equipment_state");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("emsh_nm_value");

                    b.HasKey("Id")
                        .HasName("pk_emsh_equipment_model_state_hourly_earning");

                    b.ToTable("emsh_equipment_model_state_hourly_earning");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentPositionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqph_uuid_equipment_position_history");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("eqph_dt_date");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqph_uuid_equipment");

                    b.Property<double>("Lat")
                        .HasColumnType("float")
                        .HasColumnName("eqph_nm_lat");

                    b.Property<double>("Lon")
                        .HasColumnType("float")
                        .HasColumnName("eqph_nm_lon");

                    b.HasKey("Id")
                        .HasName("pk_eqph_equipment_position_history");

                    b.ToTable("eqph_equipment_position_history");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqst_uuid_equipment_state");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("eqst_tx_color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("eqst_tx_name");

                    b.HasKey("Id")
                        .HasName("pk_eqst_equipment_state");

                    b.ToTable("eqst_equipment_state");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentStateHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqsh_uuid_equipment_state_history");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("eqsh_dt_date");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqsh_uuid_equipment");

                    b.Property<Guid>("EquipmentStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("eqsh_uuid_equipment_state");

                    b.HasKey("Id")
                        .HasName("pk_eqsh_equipment_state_history");

                    b.ToTable("eqsh_equipment_state_history");
                });

            modelBuilder.Entity("Aiko.Domain.Models.Equipment", b =>
                {
                    b.HasOne("Aiko.Domain.Models.EquipmentModel", "EquipmentModel")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentModelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("EquipmentModel");
                });

            modelBuilder.Entity("Aiko.Domain.Models.EquipmentModel", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
